#Написать функцию:
#def parser(s: str) -> dict:
#"""
#Разделителем данных является символ ":"
#Пример строки: "key1:val1:key2:val2"   
#Функция должна всегда возвращала результат и не падать.
#Написать несколько тестовых примеров вызова функции
#"""
#...
#ваш код
#...
#return response

#Тестовое 2
#Нужно спроектировать агента для мониторинга сетевых принтеров и МФУ. Код писать не надо. Просто пофантазировать. 3-4 абзаца текста или схематично. Агент должен находить все сетевые принтеры и МФУ, а потом собирать с них техническую информацию (например: модель (название) устройства; количество отпечатков; оставшийся ресурс расходных материалов).

s = "key1:val1:key2:val2:key3:val3:key4:val4:key5:val5"
s = "key1:val1:key2:val2:key3:val3:key4:val4:key5:val5:key6:"

def parser(x):
   D = {}
   try:
           g = x.split(":")
           ix = 0
           for i in range(0, len(x.split(":")), 2):
                  D[g[i]] =  g[i+1]
   except:
           print (x)                  
   return D       
         
   
print (parser(s))  

"""
вариант 1
Получаю количество нужных устройств, запускаю многопоточно для получения данных
вариант 2 
провераю по очереди каждое устройство в сети, получаю данные, если это нужное нам устройство работаю дальше 
"""
